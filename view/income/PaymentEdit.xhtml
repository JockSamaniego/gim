<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:s="http://jboss.com/products/seam/taglib"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:a="http://richfaces.org/a4j"
	xmlns:rich="http://richfaces.org/rich" xmlns:g="http://gim.gob.ec/jsf"
	template="../layout/template.xhtml">

	<ui:define name="body">

		<ui:include src="fragment/AlertListPanel.xhtml" />
		<ui:include src="fragment/ImpugnmentListPanel.xhtml" />

		<f:verbatim>
			<script type="text/javascript">

/* 			function getPath() {
				var path = window.location.href;
				return path.substring(0, path.lastIndexOf("/")) + "/";
			}		      

			function printPDF(cid, isOk) {
				if(isOk){
					var applet = document.jZebra;
					if (applet != null) {
						applet.findPrinter();
						while (!applet.isDoneFinding()) {
						    // Wait
						}
						// Append our image (only one image can be appended per print)
						applet.appendPDF(getPath() + "report/Receipt.seam?cid="+cid);
					}					
					// Very important for PDF, uses printPS() instead of print()
					monitorAppending2();
				}
			}

			function monitorAppending2() {
				var applet = document.jZebra;
				if (applet != null) {
					if (!applet.isDoneAppending()) {
						window.setTimeout('monitorAppending2()', 100);
					} else {
						applet.printPS(); // Don't print until all of the image data has been appended
						monitorPrinting();
					}
				} else {
					alert("Applet not loaded!");
				}
			}

			function monitorPrinting() {
				var applet = document.jZebra;
				if (applet != null) {
					if (!applet.isDonePrinting()) {
						window.setTimeout('monitorPrinting()', 100);
					} else {
						var e = applet.getException();
						//alert(e == null ? "Printed Successfully" : "Exception occured: " + e.getLocalizedMessage());
					}
				} else {
					alert("Applet not loaded!");
				}
			}

			function monitorFinding2() {
				var applet = document.jZebra;
				if (applet != null) {
					if (!applet.isDoneFinding()) {
						window.setTimeout('monitorFinding2()', 100);
					} else {
						var printersCSV = applet.getPrinters();
						var printers = printersCSV.split(",");
						for (p in printers) {
							alert(printers[p]);
						}
					}
				} else {
					alert("Applet not loaded!");
				}
			}
*/
/* 			function jzebraDoneAppending(){
				Richfaces.showModalPanel('printConfirmPanel');
			}

			function jzebraDonePrinting() {				
			}
			
			function jzebraReady(){
			}
				      
			function jzebraDoneFinding() {
			}
 */
			function registerPayment(hasCompensationBonds){
				if(hasCompensationBonds){
					Richfaces.showModalPanel('paymentEdit_confirmDialog',{width:350, height:160});
				} else {
					showFractionsPanel();
				}
			}

			function showFractionsPanel(){
				var confirmDialog = document.getElementById('paymentEdit_confirmDialog');
				if(confirmDialog){
					Richfaces.hideModalPanel('paymentEdit_confirmDialog');
				}
				Richfaces.showModalPanel('depositConfirmPanel',{width:800, height:540});
			}

			////////////ABONOS
			function registerSubscriptionPayment(hasCompensationBonds){
				if(hasCompensationBonds){
					Richfaces.showModalPanel('paymentEdit_confirmDialog',{width:350, height:160});
				} else {
					showFractionsPanel2();
				}
			}

			function showFractionsPanel2(){
				var confirmDialog = document.getElementById('paymentEdit_confirmDialog');
				if(confirmDialog){
					Richfaces.hideModalPanel('paymentEdit_confirmDialog');
				}
				Richfaces.showModalPanel('subscriptionPanel',{width:800, height:540});
			}
	      
		</script>
		</f:verbatim>
		<!-- 		
		<applet id="jzebra" name="jZebra" code="jzebra.PrintApplet.class"
			archive="../applets/jzebra.jar" width="3"
			height="3">
			<param name="printer" value="zebra" />
		</applet>	
 -->
		<h:form id="payment" styleClass="edit">
			<a:queue></a:queue>


			<h:outputText styleClass="formTitle"
				rendered="#{userSession.tillPermission == null}"
				value="#{messages['tillPermission.dontHavePermissions']}" />
			<h:outputText styleClass="formTitle"
				rendered="#{userSession.tillPermission != null and userSession.tillPermission.openingTime == null}"
				value="#{messages['tillPermission.isNotOpeningTill']}" />
			<h:outputText styleClass="formTitle"
				rendered="#{userSession.tillPermission != null and userSession.tillPermission.closingTime != null}"
				value="#{messages['tillPermission.hasClosingTime']}" />

			<rich:simpleTogglePanel rendered="#{userSession.user.callTicket}">
					<f:facet name="header">
						<h:panelGrid columns="2" columnClasses="headerTitle,"
							cellpadding="0" cellspacing="0">
							<h:outputText value="#{messages['turnero.title']}" styleClass="formTitle" />
						</h:panelGrid>
					</f:facet>
					 <h:panelGrid id="checkIFrame" heigth="300">
					 	 <iframe frameborder="0" align="left"
				             src="http://192.168.1.28/novosga_gim/public/modules/sga.atendimento/index"
				             name="PdfPnl" id="PdfPnl" scrolling="auto" width="1280" 
				             height="240" marginheight="5" marginwidth="10">
				         </iframe>
					 </h:panelGrid>
			</rich:simpleTogglePanel>
			<div style="clear:both; height:20px" />
			
			<rich:panel bodyClass="topAligned"
				rendered="#{userSession.tillPermission != null and userSession.tillPermission.openingTime != null and userSession.tillPermission.closingTime == null}">
				<f:facet name="header">
					<h:panelGrid columns="2" columnClasses="headerTitle,"
						cellpadding="0" cellspacing="0">
						<h:outputText value="#{messages['payment.title']}"
							styleClass="formTitle" />
						<s:button id="newPaymentBtn" action="cancel"
							value="#{messages['payment.create']}"
							disabled="#{paymentHome.resident == null}" />
					</h:panelGrid>
				</f:facet>
				<h:panelGrid columns="3" width="100%"
					columnClasses="topAligned, topAligned right">
					<a:outputPanel id="paymentTotalPanel">
						<g:residentChooser id="residentChooser"
							disabled="#{paymentHome.resident != null}"
							resident="#{paymentHome.resident}"
							residentsList="#{paymentHome.residents}"
							identificationNumber="#{paymentHome.identificationNumber}"
							criteria="#{paymentHome.criteria}" bean="#{paymentHome}"
							searchByCriteriaAction="searchByCriteria"
							clearSearchPanelAction="clearSearchPanel" searchAction="search"
							residentChosenListenerName="residentSelectedListener"
							reRender="municipalBondsPanel, totalsPanel, newPaymentBtn, messages, alertPanel" />
					</a:outputPanel>

					<a:outputPanel id="alertPanel" ajaxRendered="true">
						<a:commandLink id="alertField"
							value="#{paymentHome.blocketMessage}"
							rendered="#{paymentHome.pendingAlerts.size()==0 ? false : true}"
							style="font-size:40px; font-weight:bold;color:#{paymentHome.colorMessage}" styleClass="center"
							reRender="alertListPanel"
							oncomplete="Richfaces.showModalPanel('alertListPanel')">
						</a:commandLink>
						<br />
						<a:commandLink id="impugnmentField"
							value="#{messages['impugnment.pendingImpugnment']}"
							rendered="#{paymentHome.impugnmentsTotal.size()==0 ? false : true}"
							style="font-size:40px; font-weight:bold;" styleClass="center"
							reRender="impugnmentListPanel"
							oncomplete="Richfaces.showModalPanel('impugnmentListPanel')">
						</a:commandLink>
					</a:outputPanel>
				

					<a:outputPanel id="totalsPanel" ajaxRendered="true">
						<h:panelGrid columnClasses="topAligned right" width="100%">
							<h:outputText id="totalValueField"
								value="#{paymentHome.instance.value}" size="10"
								style="font-size:110px; font-weight:bold;" styleClass="right"
								maxlength="12">
								<f:convertNumber
									maxFractionDigits="#{messages['common.maxFractionDigits']}"
									minFractionDigits="#{messages['common.minFractionDigits']}" />
							</h:outputText>
							<h:panelGrid columns="2" style="float:right;">
								<a:commandButton id="generateAccountStateBtn"
									action="#{paymentHome.confirmCompensationAccountState()}"
									reRender="compensationAccountStatePanel" ajaxSingle="true"
									eventsQueue="gimEventsQueue"
									oncomplete="Richfaces.showModalPanel('compensationAccountStatePanel',{width:800, height:540})"
									value="#{messages['deposit.accountState']}"
									rendered="#{paymentHome.isAccountStateButtonRendered}"
									disabled="#{paymentHome.isPaymentButtonDisabled}" />

								<a:commandButton id="registerPaymentBtn"
									action="#{paymentHome.updateHasCompensationBonds}"
									reRender="depositConfirmPanel" ajaxSingle="true"
									eventsQueue="gimEventsQueue"
									oncomplete="registerPayment(#{paymentHome.hasCompensationBonds})"
									value="#{paymentHome.isFullPayment ? messages['payment.register'] : messages['Registrar Abono Convenio']}"
									disabled="#{paymentHome.isPaymentButtonDisabled}"
									focus="receivedAmount" 
									rendered="#{(!paymentHome.enableSubscription and !paymentHome.emissionFuture and empty paymentHome.municipalBondSubscriptionsItems) || (paymentHome.paymentAgree)}"/>
									
								<a:commandButton id="registerSubscriptionBtn"
									action="#{paymentHome.updateHasCompensationBonds('SUBSCRIPTION')}"
									reRender="subscriptionPanel" ajaxSingle="true"
									eventsQueue="gimEventsQueue"
									oncomplete="registerSubscriptionPayment(#{paymentHome.hasCompensationBonds})"
									value="Registrar abono"
									disabled="#{paymentHome.isPaymentButtonDisabled}"
									rendered="#{(empty paymentHome.municipalBondSubscriptionsItems and paymentHome.hasRole('PAYMENT_BY_SUBSCRIPTION'))}"
									focus="receivedAmount" />
								<h:outputText id="subscriptionMessage"
								value="Tiene pago por abono pendiente"
								style="font-size:20px; font-weight:bold; color: red" styleClass="right" 
								rendered="#{not empty paymentHome.municipalBondSubscriptionsItems and !paymentHome.enableSubscription and paymentHome.isFullPayment}"/>	
												
							</h:panelGrid>

						</h:panelGrid>
					</a:outputPanel>
				</h:panelGrid>
				<div style="clear: both" />
			</rich:panel>
			<!-- rendered="#{(empty paymentHome.municipalBondSubscriptionsItems and !paymentHome.paymentAgree) || paymentHome.enableSubscription}" -->
			<a:outputPanel id="municipalBondsPanel" ajaxRendered="true" rendered="#{!paymentHome.isBlocketToCollect}">
				<rich:panel style="margin-top:5px;"
					rendered="#{empty paymentHome.municipalBondItems and empty paymentHome.inPaymentAgreementBonds and not empty paymentHome.resident and empty paymentHome.municipalBondSubscriptionsItems}">
					<h:outputText
						style="font-weight:bold; font-size:25px; color:#00FF00"
						value="#{messages['payment.noAccountsReceivableFound']}" />
				</rich:panel>

				<rich:tabPanel id="accountStatusPanel"
					rendered="#{not empty paymentHome.municipalBondItems or not empty paymentHome.inPaymentAgreementBonds or not empty paymentHome.municipalBondSubscriptionsItems}"
					tabClass="tabTitle"
					valueChangeListener="#{paymentHome.changeSelectedTab}"
					switchType="ajax" selectedTab="municipalBondsTab">
					<rich:tab id="municipalBondsTab"
						label="#{messages['payment.payableAccounts']}" ajaxSingle="true"
						reRender="totalsPanel, municipalBondsPanel">
						<ui:include src="fragment/MunicipalBondsTable.xhtml" />
					</rich:tab>
					<rich:tab id="paymentAgreementsTab"
						label="#{messages['payment.paymentAgreements']}"
						rendered="#{not empty paymentHome.inPaymentAgreementBonds}"
						ajaxSingle="true" reRender="totalsPanel, municipalBondsPanel"
						focus="paymentAgreement">
						<ui:include src="fragment/PaymentAgreementsTable.xhtml" />
					</rich:tab>

					<rich:tab id="futureEmisionsTab"
						label="#{messages['payment.futureEmision']}"
						rendered="#{not empty paymentHome.futureBonds}" ajaxSingle="true"
						reRender="totalsPanel, municipalBondsPanel"
						focus="paymentAgreement">

						<ui:include src="fragment/MunicipalBondsFutureTable.xhtml" />

					</rich:tab>
					<rich:tab id="municipalBondsSubscriptions"
						label="#{messages['subscription.payment']}" ajaxSingle="true"
						rendered="#{not empty paymentHome.municipalBondSubscriptionsItems}"
						reRender="totalsPanel, municipalBondsPanel">
						<ui:include src="fragment/MunicipalBondsSubscriptionsTable.xhtml" />
					</rich:tab>
				</rich:tabPanel>
			</a:outputPanel>

		</h:form>
		<g:confirmDialog id="paymentEdit"
			dialogTitle="#{messages['payment.thereAreDepositsInCompensation']}"
			bean="#{paymentHome}"
			message="#{messages['payment.confirmCompensation']}"
			reRenderComponents="back" yesAction="clearFractions"
			oncomplete="showFractionsPanel()" />
		<ui:include src="fragment/CompensationAccountStatePanel.xhtml" />
		<ui:include src="fragment/DepositConfirmPanel.xhtml" />
		<!-- PAGO ABONOS -->
		<ui:include src="fragment/DepositSubscriptionPanel.xhtml" />
		<!-- PAGO ABONOS -->
		<ui:include src="PrintPDFPanel.xhtml" />
		<s:button id="back" value="#{messages['common.back']}"
			rendered="#{userSession.tillPermission == null or userSession.tillPermission.openingTime == null}"
			propagation="end" view="/home.xhtml" />
	</ui:define>

</ui:composition>