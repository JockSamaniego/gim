#Regla de recargo impuesto predial
#created on: 15 de Julio, 2016
package ec.gob.gim.rules.pf2011
import ec.gob.gim.revenue.model.MunicipalBond;
import ec.gob.gim.common.model.FiscalPeriod;
import ec.gob.gim.revenue.model.Item;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Calendar;
import org.gob.gim.common.InterestPublicInstitutionUtils;

function BigDecimal calculateSurcharge(java.util.Date serviceDate, java.lang.Long resident_id){

	     	Calendar transitionDate = Calendar.getInstance();
			transitionDate.set(Calendar.DAY_OF_MONTH, 21);
			transitionDate.set(Calendar.MONTH, 5);		
			transitionDate.set(Calendar.YEAR, 2016);
			transitionDate.set(Calendar.HOUR_OF_DAY, 0);
			transitionDate.set(Calendar.MINUTE, 0);
			transitionDate.set(Calendar.MILLISECOND, 0);
		 
			 
		     
	        java.util.Date actual = java.util.Calendar.getInstance().getTime();	        
	        
	        System.out.println("ServiceDate: "+serviceDate);
	        System.out.println("Fecha corte: "+transitionDate.getTime());
	        System.out.println("Resident ID: "+resident_id);
	        System.out.println("serviceDate bef transitionDate: "+serviceDate.before(transitionDate.getTime())  );
	        System.out.println("Es publica?: "+InterestPublicInstitutionUtils.isPublicInstitution(resident_id)  );
	        
	        
	        if(serviceDate.before(transitionDate.getTime()) && InterestPublicInstitutionUtils.isPublicInstitution(resident_id)){
	        	System.out.println("RECARGO DESDE REGLAS====> 0.1");
                return new java.math.BigDecimal(0.1);
	        }else if(serviceDate.after(transitionDate.getTime()) && InterestPublicInstitutionUtils.isPublicInstitution(resident_id)){
	        	System.out.println("ACA");
	        	return new java.math.BigDecimal(0);
	        }
	        
	        if(serviceDate.getYear() != actual.getYear() ){
	                System.out.println("retorna 0.1");
	                return new java.math.BigDecimal(0.1);
	        }
	        
	        //#Desde el 01 de Julio
	        java.util.Date firstRange = new java.util.Date(actual.getYear(),6,1);
	        if( (actual.after(firstRange) || actual.equals(firstRange)) && !resident_id.equals(new java.lang.Long("132662")) ){
	                System.out.println("retorna 0.1 en 22222");
	                return new java.math.BigDecimal(0.1);
	        }
	        
	        if( (actual.after(firstRange) || actual.equals(firstRange)) && resident_id.equals(new java.lang.Long("132662"))){
	                System.out.println("retorna 0 en 33333");
	                return new java.math.BigDecimal(0);
	        }
	        
	        
	        System.out.println("retorna 0 ya al final");
	        return new BigDecimal(0);
                
}




#list any import classes here.

rule "Recargo Impuesto predial"
        no-loop true
        salience 0
        when            
                $itemPredio : Item(entry.name == "RECARGO IMPUESTO PREDIAL");         
                $mb : MunicipalBond();  
        then            
                $mb.calculateValue();                           
                $itemPredio.setTotal($mb.getItems().get(0).getTotal().multiply(calculateSurcharge($mb.getServiceDate(), $mb.getResident().getId()  )));              
end
