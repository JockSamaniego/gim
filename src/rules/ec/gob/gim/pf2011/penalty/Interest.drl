#created on: Oct 31, 2011
package ec.gob.gim.rules.pf2011.penalty;

import ec.gob.gim.income.model.InterestRate;
import ec.gob.gim.revenue.model.Entry;
import ec.gob.gim.common.model.Person;
import ec.gob.gim.revenue.model.MunicipalBond;
import ec.gob.gim.revenue.model.Item;
import java.util.Calendar;
import java.util.List;
import java.util.ArrayList;

dialect "java"

function void calculateInterest(Item $itemInterest, MunicipalBond $mb, List $list){
	
	System.out.println("ingresando a funcion lista... " + $list.size());

	$itemInterest.setAmount(new java.math.BigDecimal(1.0));
	Calendar $expirationCal = Calendar.getInstance(); 
	//$expirationCal.setTime($mb.getExpirationDate());
	java.math.BigDecimal $interest = java.math.BigDecimal.ZERO;

	## Nota: para la lista cuando se recupera de la base de hechos, no permite los for..each
	for (int i = 0; i < $list.size(); i++){
		InterestRate $ir = (InterestRate)$list.get(i);
		Boolean $inLimit = $ir.isInTime($mb.getExpirationDate());
		//System.out.println("Esta en el limite... " + $inLimit);
		Integer months = $ir.getMonthsToApply($mb.getExpirationDate(), $expirationCal.getTime());
		List<java.math.BigDecimal> rateList = $ir.findRatesToApply($mb.getExpirationDate(), $expirationCal.getTime());
		
		//System.out.println("meses ... " + months);
		//System.out.println("listRates ... " + rateList.size());
		
		for (java.math.BigDecimal bg : rateList){
			//System.out.println("Interest antes... " + $interest);
			java.math.BigDecimal interestValue = $mb.getValue().multiply(bg);
			//System.out.println("Interest Value... " + interestValue);
			$interest = $interest.add(interestValue);
			//System.out.println("Interest despues... " + $interest);
		}
		#$expirationCal.add(Calendar.MONTH, months);
		System.out.println("Interest Total... " + $interest);
	}

	//System.out.println("Interest Total final... " + $interest);
	$itemInterest.setValue($interest);
	$itemInterest.setTotal($itemInterest.getValue().multiply($itemInterest.getTotal()));
	if ($interest.doubleValue() > java.math.BigDecimal.ZERO.doubleValue()){ 
		$mb.calculateInterest();
		$itemInterest.setObservations("Interes por Mora");
	}
}


rule "Calculo de Intereses por Mora"
	no-loop true
	#salience 9
	when
		$itemInterest : Item(entry.code == "00006");
		$list : List<InterestRate>(size > 0);
		#$list : ArrayList(size > 0) from collect (InterestRate()); 
		$mb : MunicipalBond(interestItems contains $itemInterest);
		#$current : java.util.Calendar.getInstance().getTime();
		eval(Calendar.getInstance().getTime().after($mb.getExpirationDate()));
						
	then
		System.out.println("Ejecutando regla de Interest... " );
		System.out.println("Tamanio de lista... " + $list.size());
		calculateInterest($itemInterest, $mb, $list);
end 

